{
  "openapi": "3.0.0",
  "info": {
    "version": "0.4",
    "title": "Virgo Search API",
    "description": ""
  },
  "paths": {
    "/pools": {
      "get": {
        "summary": "Gets information about all pools in the authoritative pool list.",
        "operationId": "listPools",
        "parameters": [
          {
            "in": "header",
            "name": "Accept-Language",
            "description": "The language in which the client is requesting to receive localized pool names/descriptions.",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response including the identification and status of each pool.",
            "headers": {
              "Content-Language": {
                "description": "The language in which the service is returning pool names/descriptions.",
                "schema": {
                  "type": "string"
                },
                "required": false
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PoolListing"
                }
              }
            }
          }
        }
      }
    },
    "/search": {
      "post": {
        "summary": "Performs an inter-pool search.",
        "operationId": "search",
        "description": "Determines which pools to search, issues search requests against them and sorts and aggregates those responses.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Accept-Language",
            "description": "The language in which the client is requesting to receive localized warnings, errors, and pool facet/field labels.",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "description": "Information defining the search to be performed.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A successful response",
            "headers": {
              "Content-Language": {
                "description": "The language in which the service is returning warnings and pool facet/field labels.",
                "schema": {
                  "type": "string"
                },
                "required": false
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponse"
                }
              }
            }
          },
          "400": {
            "description": "A failed response resulting from a bad request.",
            "headers": {
              "Content-Language": {
                "description": "The language in which the service is returning an error.",
                "schema": {
                  "type": "string"
                },
                "required": false
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "TBD"
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Access token is missing or invalid"
      }
    },
    "schemas": {
      "SearchRequest": {
        "description": "All the information that defines a search.  Until more is decided this only includes the users query and the specified search target. In the future it will contain all the things associated with a user's preferences, all the filters (facets) and other criteria that might affect the targets searched, the subset return, the filters applied, ranking, verbosity of returned results, etc.\n",
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "\"A query formatted as defined by the specification here: https://github.com/uvalib/v4-api/tree/master/query-syntax\"\n"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationRequest"
          },
          "search_preferences": {
            "$ref": "#/components/schemas/SearchPreferences"
          }
        }
      },
      "SearchResponse": {
        "description": "Response to a search request.",
        "type": "object",
        "properties": {
          "request": {
            "$ref": "#/components/schemas/SearchRequest"
          },
          "pools_sarched": {
            "type": "integer"
          },
          "total_time_ms": {
            "type": "integer"
          },
          "total_hits": {
            "type": "integer"
          },
          "pool_results": {
            "$ref": "#/components/schemas/PoolResultList"
          }
        }
      },
      "PoolResult": {
        "description": "Results returned from a search of a single pool.",
        "type": "object",
        "required": [
          "service_url",
          "pagination",
          "confidence"
        ],
        "properties": {
          "service_url": {
            "description": "The URL for this pool's search API.  Necessary in order to request subsequent pages or a full summary and serves to uniquely identify the pool.",
            "type": "string"
          },
          "elapsed_ms": {
            "type": "integer",
            "description": "The number of miliseconds it took to get the response from the pool search."
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "record_list": {
            "$ref": "#/components/schemas/RecordList"
          },
          "confidence": {
            "type": "string",
            "description": "Indicator of the confidence that the given pool has relevant matches to the query. When a pool result set indicates \"exact\" confidence, that means the pool believes the query was a \"known item search\" and that that pool contains that item (which will be listed first).",
            "enum": [
              "low",
              "medium",
              "high",
              "exact"
            ]
          }
        }
      },
      "PoolResultList": {
        "description": "A list of search results (either complete or summarized) sorted from most to least relevant.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PoolResult"
        }
      },
      "Record": {
        "description": "A single Record (partial or detailed)",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "the identifier (unique within this pool) of the item"
          },
          "title": {
            "type": "string",
            "description": "A title to display for the record."
          }
        }
      },
      "RecordList": {
        "description": "A list of Records.",
        "type": "array",
        "uniqueItems": true,
        "items": {
          "$ref": "#/components/schemas/Record"
        }
      },
      "PaginationRequest": {
        "description": "Information about the subset of the full results set is being requested.",
        "properties": {
          "start": {
            "description": "The index of the first item to fetch.",
            "type": "integer"
          },
          "rows": {
            "description": "The number of items to request",
            "type": "integer"
          }
        }
      },
      "Pagination": {
        "description": "Information needed to display pagination links",
        "properties": {
          "start": {
            "description": "The index of the first item on this page.",
            "type": "integer"
          },
          "rows": {
            "description": "The number of items per page",
            "type": "integer"
          },
          "total": {
            "description": "The total number of items. Some implementations won't be able to tell you the result count, and will return -1 (meaning some results but unknown)",
            "type": "integer",
            "minimum": -1
          }
        }
      },
      "SearchPreferences": {
        "description": "user search preferences",
        "type": "object",
        "properties": {
          "target_pools": {
            "description": "The URL of the pool to feature.  Specifying a valid pool URL will override the normal search behavior.",
            "type": "string"
          },
          "excluded_pools": {
            "description": "URLs of pools the user wishes to ignore.  These pools will not be searched.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PoolListing": {
        "description": "All the pools that are in the authoritative pool list.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PoolInfo"
        }
      },
      "PoolInfo": {
        "description": "Information about a pool.",
        "required": [
          "url"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "alive": {
            "type": "boolean"
          }
        }
      }
    }
  }
}
