{
  "openapi": "3.0.0",
  "info": {
    "version": "0.6",
    "title": "Virgo Pool Search API",
    "description": ""
  },
  "paths": {
    "/api/search": {
      "post": {
        "summary": "Performs a pool search.",
        "operationId": "search",
        "description": "Searches this pool.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Accept-Language",
            "description": "The language in which the client is requesting to receive localized facet/field labels.",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "description": "Information defining the search to be performed.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/uvalib/v4-api/master/v4-search-api-OAS3.json#/components/schemas/SearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A successful response",
            "headers": {
              "Content-Language": {
                "description": "The language in which the service is returning facet/field labels.",
                "schema": {
                  "type": "string"
                },
                "required": false
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PoolResult"
                }
              }
            }
          },
          "400": {
            "description": "A failed response resulting from a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PoolResult"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/identify": {
      "get": {
        "summary": "Retrieves pool identity information.",
        "operationId": "identify",
        "description": "Identifies this pool.",
        "parameters": [
          {
            "in": "header",
            "name": "Accept-Language",
            "description": "The language in which the client is requesting to receive localized pool labels.",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "headers": {
              "Content-Language": {
                "description": "The language in which the service is returning pool labels.",
                "schema": {
                  "type": "string"
                },
                "required": false
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PoolIdentification"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "TBD"
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Access token is missing or invalid"
      }
    },
    "schemas": {
      "PoolResult": {
        "description": "Results returned from a search of a single pool.  NOTE: group_list is not currently used, but will replace record_list when grouped records are working.",
        "type": "object",
        "required": [
          "service_url",
          "pagination",
          "confidence"
        ],
        "properties": {
          "service_url": {
            "description": "The URL for this pool's search API.  Necessary in order to request subsequent pages or a full summary and serves to uniquely identify the pool.",
            "type": "string"
          },
          "elapsed_ms": {
            "type": "integer",
            "description": "The number of milliseconds the pool took to service the request, from time of receipt to time of response."
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "record_list": {
            "$ref": "#/components/schemas/RecordList"
          },
          "group_list": {
            "$ref": "#/components/schemas/GroupList"
          },
          "available_facets": {
            "$ref": "#/components/schemas/AvailableFacets"
          },
          "facet_list": {
            "$ref": "#/components/schemas/FacetList"
          },
          "confidence": {
            "type": "string",
            "description": "Indicator of the confidence that the given pool has relevant matches to the query. When a pool result set indicates \"exact\" confidence, that means the pool believes the query was a \"known item search\" and that that pool contains that item (which will be listed first).",
            "enum": [
              "low",
              "medium",
              "high",
              "exact"
            ]
          }
        }
      },
      "RecordField": {
        "description": "A single Field in a Record",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of this field"
          },
          "type": {
            "type": "string",
            "description": "The type of this field.",
            "enum": [
              "FIXME",
              "text",
              "url"
            ]
          },
          "label": {
            "type": "string",
            "description": "The label to display for this field."
          },
          "value": {
            "type": "string",
            "description": "The value of this field."
          },
          "visibility": {
            "type": "string",
            "description": "Specifies the view in which this field should be displayed in the client.",
            "enum": [
              "basic",
              "detailed"
            ]
          },
          "display": {
            "type": "string",
            "description": "Specifies whether this field should be displayed in the client.",
            "enum": [
              "optional"
            ]
          }
        }
      },
      "Record": {
        "description": "A single Record (partial or detailed)",
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "$ref": "#/components/schemas/RecordField"
            }
          }
        }
      },
      "RecordList": {
        "description": "A list of Records.",
        "type": "array",
        "uniqueItems": true,
        "items": {
          "$ref": "#/components/schemas/Record"
        }
      },
      "Group": {
        "description": "A single Grouped search result.",
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "The unique value for this group."
          },
          "count": {
            "type": "integer",
            "description": "The number of Records in this group."
          },
          "record_list": {
            "$ref": "#/components/schemas/RecordList"
          }
        }
      },
      "GroupList": {
        "description": "A list of Groups.",
        "type": "array",
        "uniqueItems": true,
        "items": {
          "$ref": "#/components/schemas/Group"
        }
      },
      "Pagination": {
        "description": "Information needed to display pagination links",
        "properties": {
          "start": {
            "description": "The index of the first item on this page.",
            "type": "integer"
          },
          "rows": {
            "description": "The number of items per page",
            "type": "integer"
          },
          "total": {
            "description": "The total number of items. Some implementations won't be able to tell you the result count, and will return -1 (meaning some results but unknown)",
            "type": "integer",
            "minimum": -1
          }
        }
      },
      "AvailableFacet": {
        "description": "A single facet result",
        "type": "object",
        "properties": {
          "id": {
            "description": "The identifier for this facet",
            "type": "string"
          },
          "name": {
            "description": "The localized display name of this facet",
            "type": "string"
          }
        }
      },
      "AvailableFacets": {
        "description": "The list of facets that the pool supports and which can be requested by the client as a facet or filter",
        "type": "array",
        "uniqueItems": true,
        "items": {
          "$ref": "#/components/schemas/AvailableFacet"
        }
      },
      "FacetBucket": {
        "description": "A single bucket in a facet result",
        "type": "object",
        "properties": {
          "id": {
            "description": "The identifier for this bucket",
            "type": "string"
          },
          "value": {
            "description": "The value of this bucket",
            "type": "string"
          },
          "count": {
            "description": "The number of results in this bucket",
            "type": "integer"
          }
        }
      },
      "FacetListItem": {
        "description": "A single facet result",
        "type": "object",
        "properties": {
          "id": {
            "description": "The identifier for this facet",
            "type": "string"
          },
          "name": {
            "description": "The localized display name of this facet",
            "type": "string"
          },
          "buckets": {
            "description": "The buckets that resulted from the application of this facet",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FacetBucket"
            }
          }
        }
      },
      "FacetList": {
        "description": "The list of facet results for facets requested by the client",
        "type": "array",
        "uniqueItems": true,
        "items": {
          "$ref": "#/components/schemas/FacetListItem"
        }
      },
      "PoolIdentification": {
        "description": "The localized information about this pool",
        "type": "object",
        "properties": {
          "name": {
            "description": "The localized name of this pool, as displayed above the search results",
            "type": "string"
          },
          "description": {
            "description": "The localized description of this pool, as displayed in search pool (source) setup",
            "type": "string"
          },
          "public_url": {
            "description": "The publicly-accessible URL for this pool",
            "type": "string"
          }
        }
      }
    }
  }
}