{
  "openapi": "3.0.0",
  "info": {
    "version": "0.3",
    "title": "Virgo Pool Search API",
    "description": ""
  },
  "paths": {
    "/search": {
      "post": {
        "summary": "Performs an pool search.",
        "operationId": "search",
        "description": "Searches this pool.",
        "requestBody": {
          "description": "Information defining the search to be performed.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PoolResult"
                }
              }
            }
          },
          "400": {
            "description": "A failed response resulting from a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PoolResult"
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "description": "SwaggerHub API Auto Mocking",
      "url": "https://virtserver.swaggerhub.com/jlj5aj/VirgoSearchAPI/0.2"
    }
  ],
  "components": {
    "schemas": {
      "SearchRequest": {
        "description": "All the information that defines a search.",
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "\"A query formatted as defined by the specification here: https://github.com/uvalib/v4-api/tree/master/query-syntax\"\n"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationRequest"
          }
        }
      },
      "PoolResult": {
        "description": "Results (or summary) returned from a search of a single pool.",
        "type": "object",
        "required": [
          "service_url",
          "pagination",
          "confidence"
        ],
        "properties": {
          "service_url": {
            "description": "The URL for this pool's search API.  Necessary in order to request subsequent pages or a full summary and serves to uniquely identify the pool.",
            "type": "string"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "record_list": {
            "$ref": "#/components/schemas/RecordList"
          },
          "confidence": {
            "type": "string",
            "description": "Indicator of the confidence that the given pool has relevant matches to the query. When a pool result set indicates \"exact\" confidence, that means the pool believes the query was a \"known item search\" and that that pool contains that item (which will be listed first).",
            "enum": [
              "low",
              "medium",
              "high",
              "exact"
            ]
          }
        }
      },
      "Record": {
        "description": "A single Record (partial or detailed)",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "the identifier (unique within this pool) of the item"
          },
          "title": {
            "type": "string",
            "description": "A title to display for the record."
          }
        }
      },
      "RecordList": {
        "description": "A list of Records. The record_list only appears in non-summary responses.",
        "type": "array",
        "uniqueItems": true,
        "items": {
          "$ref": "#/components/schemas/Record"
        }
      },
      "PaginationRequest": {
        "description": "Information about the subset of the full results set is being requested.",
        "properties": {
          "start": {
            "description": "The index of the first item to fetch.",
            "type": "integer"
          },
          "rows": {
            "description": "The number of items to request",
            "type": "integer"
          }
        }
      },
      "Pagination": {
        "description": "Information needed to display pagination links",
        "properties": {
          "start": {
            "description": "The index of the first item on this page.",
            "type": "integer"
          },
          "rows": {
            "description": "The number of items per page",
            "type": "integer"
          },
          "total": {
            "description": "The total number of items. Some implementations won't be able to tell you the result count, and will return -1 (meaning some results but unknown)",
            "type": "integer",
            "minimum": -1
          }
        }
      }
    }
  }
}
