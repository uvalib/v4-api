{
  "openapi": "3.0.0",
  "info": {
    "version": "0.6",
    "title": "Virgo Pool Search API",
    "description": ""
  },
  "paths": {
    "/api/search": {
      "post": {
        "summary": "Performs a pool search.",
        "operationId": "search",
        "description": "Searches this pool.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Accept-Language",
            "description": "The language in which the client is requesting to receive localized facet/field labels.",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "description": "Information defining the search to be performed.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/uvalib/v4-api/master/v4-search-api-OAS3.json#/components/schemas/SearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A successful response",
            "headers": {
              "Content-Language": {
                "description": "The language in which the service is returning facet/field labels.",
                "schema": {
                  "type": "string"
                },
                "required": false
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PoolResponse"
                }
              }
            }
          },
          "400": {
            "description": "A failed response resulting from a bad request."
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/api/search/facets": {
      "post": {
        "summary": "(path okay?) Returns the facet list for a given search.",
        "operationId": "search/facets",
        "description": "Accepts the same search values as a regular pool search but only returns available and selected facets with their buckets and counts.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Accept-Language",
            "description": "The language in which the client is requesting to receive localized facet/field labels.",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "description": "Information defining the search to be performed.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://raw.githubusercontent.com/uvalib/v4-api/master/v4-search-api-OAS3.json#/components/schemas/SearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A successful response",
            "headers": {
              "Content-Language": {
                "description": "The language in which the service is returning facet/field labels.",
                "schema": {
                  "type": "string"
                },
                "required": false
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacetResponse"
                }
              }
            }
          },
          "400": {
            "description": "A failed response resulting from a bad request."
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/api/resource/{id}": {
      "get": {
        "summary": "Performs a single item lookup.",
        "operationId": "resource",
        "description": "Looks up this item.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Accept-Language",
            "description": "The language in which the client is requesting to receive localized field labels.",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Identifier for the resource"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "headers": {
              "Content-Language": {
                "description": "The language in which the service is returning facet/field labels.",
                "schema": {
                  "type": "string"
                },
                "required": false
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Record"
                }
              }
            }
          },
          "400": {
            "description": "A failed response resulting from a bad request."
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/identify": {
      "get": {
        "summary": "Retrieves pool identity information.",
        "operationId": "identify",
        "description": "Identifies this pool.",
        "parameters": [
          {
            "in": "header",
            "name": "Accept-Language",
            "description": "The language in which the client is requesting to receive localized pool labels.",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "headers": {
              "Content-Language": {
                "description": "The language in which the service is returning pool labels.",
                "schema": {
                  "type": "string"
                },
                "required": false
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PoolIdentification"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Access token is missing or invalid"
      }
    },
    "schemas": {
      "PoolResponse": {
        "description": "Results returned from a search of a single pool.",
        "type": "object",
        "required": [
          "identity",
          "pagination",
          "confidence"
        ],
        "properties": {
          "identity": {
            "$ref": "#/components/schemas/PoolIdentification"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "sort_options": {
            "$ref": "#/components/schemas/SortOptions"
          },
          "group_list": {
            "$ref": "#/components/schemas/GroupList"
          },
          "available_facets": {
            "$ref": "#/components/schemas/AvailableFacetList"
          },
          "confidence": {
            "type": "string",
            "description": "Indicator of the confidence that the given pool has relevant matches to the query. When a pool result set indicates \"exact\" confidence, that means the pool believes the query was a \"known item search\" and that that pool contains that item (which will be listed first).",
            "enum": [
              "low",
              "medium",
              "high",
              "exact"
            ]
          },
          "elapsed_ms": {
            "type": "integer",
            "description": "The number of milliseconds the pool took to service the request, from time of receipt to time of response."
          }
        }
      },
      "GenericField": {
        "description": "A single Field in a Record or Group",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of this field"
          },
          "type": {
            "type": "string",
            "description": "The type of this field.  The default is 'text' if not specified.",
            "enum": [
              "text",
              "identifier",
              "author",
              "title",
              "subtitle",
              "availability",
              "url",
              "image-url",
              "boolean",
              "etc."
            ]
          },
          "label": {
            "type": "string",
            "description": "The localized label to display for this field."
          },
          "value": {
            "type": "string",
            "description": "The value of this field."
          },
          "visibility": {
            "type": "string",
            "description": "Specifies the view in which this field should be displayed in the client.  The default is 'basic' if not specified.",
            "enum": [
              "basic",
              "detailed"
            ]
          },
          "display": {
            "type": "string",
            "description": "Specifies whether this field should be displayed in the client.  If not specified, the client will display this field.",
            "enum": [
              "optional"
            ]
          }
        }
      },
      "Record": {
        "description": "A single Record (partial or detailed)",
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "$ref": "#/components/schemas/GenericField"
            }
          }
        }
      },
      "RecordList": {
        "description": "A list of Records.",
        "type": "array",
        "uniqueItems": true,
        "items": {
          "$ref": "#/components/schemas/Record"
        }
      },
      "Group": {
        "description": "A single Grouped search result.",
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "The unique value for this group."
          },
          "count": {
            "type": "integer",
            "description": "The number of Records in this group."
          },
          "fields": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "$ref": "#/components/schemas/GenericField"
            }
          },
          "record_list": {
            "$ref": "#/components/schemas/RecordList"
          },
          "exact": {
            "type": "boolean",
            "description": "Denotes whether this item is an exact match, for results with a confidence value of \"exact\""
          }
        }
      },
      "GroupList": {
        "description": "A list of Groups.  For pools that do not support grouping, each record should be wrapped inside a group with a count of 1.",
        "type": "array",
        "uniqueItems": true,
        "items": {
          "$ref": "#/components/schemas/Group"
        }
      },
      "Pagination": {
        "description": "Information needed to display pagination links",
        "properties": {
          "start": {
            "description": "The index of the first item on this page.",
            "type": "integer"
          },
          "rows": {
            "description": "The number of items per page",
            "type": "integer"
          },
          "total": {
            "description": "The total number of items. Some implementations won't be able to tell you the result count, and will return -1 (meaning some results but unknown)",
            "type": "integer",
            "minimum": -1
          }
        }
      },
      "Sort": {
        "description": "Optional sorting specification.",
        "properties": {
          "sort_id": {
            "description": "The ID of the sort, as reported by the pool in a search response.  (These may need to be coordinated globally among pools, if sorting will be a global feature.)",
            "type": "string"
          },
          "order": {
            "description": "The order in which results should be sorted.",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          }
        }
      },
      "SortOption": {
        "description": "A single supported sorting option for this pool/search.",
        "properties": {
          "id": {
            "description": "The (pool-specific?) ID for this sorting option.",
            "type": "string"
          },
          "label": {
            "description": "The localized label for this sorting option.",
            "type": "string"
          }
        }
      },
      "SortOptions": {
        "description": "A list of supported sorting options for this pool/search.",
        "type": "array",
        "uniqueItems": true,
        "items": {
          "$ref": "#/components/schemas/SortOption"
        }
      },
      "AvailableFacetList": {
        "description": "(This might be unnecessary with a separate facets endpoint.) The list of facet names that the pool supports and which can be requested by the client as a facet or filter. Does not include buckets or counts.",
        "type": "array",
        "uniqueItems": true,
        "items": {
          "$ref": "#/components/schemas/AvailableFacet"
        }
      },
      "AvailableFacet": {
        "description": "A single available facet result",
        "type": "object",
        "properties": {
          "id": {
            "description": "The identifier for this facet",
            "type": "string"
          },
          "name": {
            "description": "The localized display name of this facet",
            "type": "string"
          }
        }
      },
      "FacetResponse": {
        "description": "The detailed list of facets that have been applied to this request. Includes buckes and counts.",
        "type": "object",
        "uniqueItems": true,
        "properties": {
          "facet_list": {
            "$ref": "#/components/schemas/FacetList"
          }
        }
      },
      "FacetList": {
        "description": "The list of facet results for facets requested by the client",
        "type": "array",
        "uniqueItems": true,
        "items": {
          "$ref": "#/components/schemas/FacetListItem"
        }
      },
      "FacetListItem": {
        "description": "A single facet result",
        "type": "object",
        "properties": {
          "id": {
            "description": "The identifier for this facet",
            "type": "string"
          },
          "name": {
            "description": "The localized display name of this facet",
            "type": "string"
          },
          "buckets": {
            "description": "The buckets that resulted from the application of this facet",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FacetBucket"
            }
          }
        }
      },
      "FacetBucket": {
        "description": "A single bucket in a facet result",
        "type": "object",
        "properties": {
          "value": {
            "description": "The value of this bucket",
            "type": "string"
          },
          "count": {
            "description": "The number of results in this bucket",
            "type": "integer"
          },
          "selected": {
            "description": "Has this facet value been applied to the search?",
            "type": "boolean",
            "default": false
          }
        }
      },
      "PoolIdentification": {
        "description": "The localized information about this pool",
        "type": "object",
        "properties": {
          "name": {
            "description": "The localized name of this pool, as displayed above the search results.  This should be as short as possible, e.g. \"Catalog\".",
            "type": "string"
          },
          "description": {
            "description": "The localized detailed description of this pool.  This should indicate what content is available in the pool, and can include the current status of the pool.",
            "type": "string"
          }
        }
      }
    }
  }
}